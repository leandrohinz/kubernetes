{
  "version": 4,
  "terraform_version": "1.6.4",
  "serial": 7,
  "lineage": "5ccbd988-1929-3892-080a-9bc29f77b4b7",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "frontend_chart",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./frontend-chart",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "frontend-chart",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1",
                "chart": "frontend-chart",
                "name": "frontend-chart",
                "namespace": "leandrohinestroza",
                "revision": 3,
                "values": "{\"appName\":\"frontend\",\"containerPort\":8080,\"envVar1\":\"PORT\",\"envVar2\":\"AUTH_API_ADDRESS\",\"envVar3\":\"TODOS_API_ADDRESS\",\"envVar4\":\"FOR_DEPLOY\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"leandrohinz/frontend\",\"tag\":\"\"},\"ingress\":{\"hosts\":[{\"host\":\"frontend.info\",\"paths\":[{\"path\":\"/\",\"pathType\":\"Prefix\"}]}]},\"ingressClassName\":\"nginx\",\"ingressPort\":8080,\"namespaceName\":\"leandrohinestroza\",\"replicaCount\":2,\"service\":{\"nodePort\":30001,\"port\":8080,\"protocol\":\"TCP\",\"targetPort\":8080,\"type\":\"LoadBalancer\"},\"valueVar1\":8080,\"valueVar2\":\"http://auth-api-service.leandrohinestroza.svc.cluster.local:8000\",\"valueVar3\":\"http://todos-api-service.leandrohinestroza.svc.cluster.local:8082\",\"valueVar4\":\"TEST\"}",
                "version": "0.1.0"
              }
            ],
            "name": "frontend-chart",
            "namespace": "leandrohinestroza",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://github.com/leandrohinz/kubernetes",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for frontend-chart.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nnamespaceName: leandrohinestroza\n\nappName: frontend\n\nreplicaCount: 2\n\ncontainerPort: 8080\n\nenvVar1: PORT\nvalueVar1: 8080\n\nenvVar2: AUTH_API_ADDRESS\nvalueVar2: http://auth-api-service.leandrohinestroza.svc.cluster.local:8000\n\nenvVar3: TODOS_API_ADDRESS\nvalueVar3: http://todos-api-service.leandrohinestroza.svc.cluster.local:8082\n\nenvVar4: FOR_DEPLOY\nvalueVar4: TEST\n\nimage:\n  repository: leandrohinz/frontend\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"\"\n\ningress:\n  hosts:\n    - host: frontend.info\n      paths:\n        - path: /\n          pathType: Prefix\n\ningressPort: 8080\n\ningressClassName: nginx\n\nservice:\n  type: LoadBalancer\n  port: 8080\n  protocol: TCP\n  targetPort: 8080\n  nodePort: 30001\n\n# resources: {}\n#   # We usually recommend not to specify default resources and to leave this as a conscious\n#   # choice for the user. This also increases chances charts run on environments with little\n#   # resources, such as Minikube. If you do want to specify resources, uncomment the following\n#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n#   # limits:\n#   #   cpu: 100m\n#   #   memory: 128Mi\n#   # requests:\n#   #   cpu: 100m\n#   #   memory: 128Mi\n\n# autoscaling:\n#   enabled: false\n#   minReplicas: 1\n#   maxReplicas: 100\n#   targetCPUUtilizationPercentage: 80\n#   # targetMemoryUtilizationPercentage: 80\n\n# # Additional volumes on the output Deployment definition.\n# volumes: []\n# # - name: foo\n# #   secret:\n# #     secretName: mysecret\n# #     optional: false\n\n# # Additional volumeMounts on the output Deployment definition.\n# volumeMounts: []\n# # - name: foo\n# #   mountPath: \"/etc/foo\"\n# #   readOnly: true\n\n# nodeSelector: {}\n\n# tolerations: []\n\n# affinity: {}\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
